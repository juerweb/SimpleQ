@model SimpleQ.Webinterface.Models.Customer

@{
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<a class="btn btn-primary" href="@Url.Action("Login", "Account")">Zum Login</a>
<br /><br />
@using (Html.BeginForm("Register", "Account"))
{
      <div id="baseData">
          <h3>Basisdaten</h3>
          <div class="form-group">
              @Html.LabelFor(c => c.CustName, "Kunden-Name")
              @Html.TextBoxFor(c => c.CustName, new { @class = "form-control", required = "required" })
              @Html.ValidationMessageFor(c => c.CustName)
          </div>

          <div class="form-group">
              @Html.LabelFor(c => c.CustEmail, "E-Mail")
              @Html.TextBoxFor(c => c.CustEmail, new { @class = "form-control", required = "required" })
              @Html.ValidationMessageFor(c => c.CustEmail)
          </div>

          <div class="form-group">
              @Html.LabelFor(c => c.CustPwdTmp, "Passwort")
              @Html.PasswordFor(c => c.CustPwdTmp, new { @class = "form-control", required = "required" })
              @Html.ValidationMessageFor(c => c.CustPwdTmp)
          </div>

          <div class="form-group">
              @Html.Label("confirmPassword", "Passwort bestätigen")
              @Html.Password("confirmPassword", "", new { @class = "form-control", required = "required" })
              @Html.ValidationMessage("confirmPassword")
          </div>
      </div>

    <div id="addressData">
        <h3>Adressdaten</h3>
        <div class="form-group">
            @Html.LabelFor(c => c.Street, "Straße und Hausnr.")
            @Html.TextBoxFor(c => c.Street, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.Street)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.Plz, "PLZ")
            @Html.TextBoxFor(c => c.Plz, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.Plz)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.City, "Stadt")
            @Html.TextBoxFor(c => c.City, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.City)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.Country, "Land")
            @Html.TextBoxFor(c => c.Country, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.Country)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.LanguageCode, "Sprache")
            @Html.DropDownListFor(c => c.LanguageCode, new SelectList(new[] { "DE", "EN", "ES" }), new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.LanguageCode)
        </div>
    </div>

    <div id="specificData">
        <h3>Spezifische Daten</h3>
        <div class="form-group">
            @Html.LabelFor(c => c.DataStoragePeriod, "Datenspeicherungsfrist in Monaten")
            @Html.TextBoxFor(c => c.DataStoragePeriod, new { @class = "form-control", required = "required", @type = "number", min = 1, max = 24 })
            @Html.ValidationMessageFor(c => c.DataStoragePeriod)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.AccountingPeriod, "Rechnungsperiode in Monaten")
            @Html.DropDownListFor(c => c.AccountingPeriod, new SelectList(new[] { 1, 3, 6, 12 }), new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.AccountingPeriod)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.PaymentMethodId, "Bezahlungsart")
            @Html.DropDownListFor(c => c.PaymentMethodId, new SelectList(ViewBag.PaymentMethods, "PaymentMethodId", "PaymentMethodDesc"), new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(c => c.PaymentMethodId)
        </div>
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Registrieren</button>
    </div>
}
