@using SimpleQ.Webinterface.App_LocalResources
@using SimpleQ.Webinterface.Models;
@using System.Resources;
@model SimpleQ.Webinterface.Models.ViewModels.SurveyCreationModel

@{
    Survey survey = new Survey();

}
@using (Html.BeginForm("New", "SurveyCreation"))
{
    <div class="row mt-1 ml-0 mr-0">
        <div class="col-md-7 pl-4">
            <h2>@Resources.surveyCreationHeader</h2>

            <label>@Resources.surveyCategoryHeader</label>
            <div class="row mr-0 ml-0">
                <div class="col-11 p-0">
                    @Html.DropDownListFor(model => model.Survey.CatId, new SelectList(Model.SurveyCategories, "CatId", "CatName"), new { @class = "form-control rightNotRounded" })
                </div>
                <div class="col-1 p-0">
                    <button type="button" class="btn btn-success btn-block pb-0 pl-0 pr-0 leftNotRounded" id="openAddCategoryBtn"><i class="material-icons">&#xe145;</i></button>
                </div>
            </div>
            <div class="row mr-0 ml-0 mt-2" id="newCategoryDiv">
                <div class="col-11 p-0">
                    <input class="form-control border border-success rightNotRounded" id="newCategoryTB" type="text" placeholder="@Resources.newCategoryName" />
                </div>
                <div class="col-1 p-0">
                    <button type="button" class="btn btn-success btn-block pb-0 pl-0 pr-0 leftNotRounded" id="addCategoryBtn" data-toggle="tooltip" title="@Resources.add"><i class="material-icons">&#xe148;</i></button>
                </div>
            </div>

            <div class="form-group mt-2">
                <label for="AnswerTypeCB">Antwortart</label>
                <select class="form-control" id="AnswerTypeCB" name="Survey.TypeId">
                    @{
                        ResourceManager rm = Resources.ResourceManager;
                        foreach (AnswerType at in Model.AnswerTypes)
                        {
                            if (at.TypeId == 1)
                            {
                                <option value="@at.TypeId" selected>@rm.GetString(at.TypeDesc)</option>
                            }
                            else
                            {
                                <option value="@at.TypeId">@rm.GetString(at.TypeDesc)</option>
                            }
                        }
                    }

                </select>
            </div>

            <button type="button" class="btn btn-primary btn-block mt-2" id="openAddAnswer"><span class="d-flex justify-content-between"><span>Answers</span><i class="material-icons">&#xe876;</i></span></button>
            <div id="answerBox" class="border border-dark mt-2">
                <div class="row mt-1 mb-1 mr-0 ml-0">
                    <div class="col-9 pr-0"><input id="answerInput" class="form-control rightNotRounded" type="text" placeholder="@Resources.addAnswer" /></div>
                    <div class="col-3 pl-0"><button type="button" class="btn btn-success btn-block pb-0 leftNotRounded" onclick="addAnswer()"><i class="material-icons">&#xe148;</i></button></div>
                </div>
                <ul class="list-group" id="answerUL" name="TextAnswerOptions">

                </ul>
            </div>

            <div class="form-group mt-2">
                <label for="groups">@Resources.groups</label>
                <div class="border border-dark">
                    <ul class="list-group groups-ul pl-2" id="groups">
                        @foreach (Department group in Model.Departments)
                        {
                            <li>
                                <input type="checkbox" checked="checked" onclick="" name="SelectedDepartments" value="@group.DepId"><span>@group.DepName</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="form-group mt-2">
                <span class="row">
                    <span class="col-md">
                        <label for="QuestionFromDatePicker">@Resources.questionTimeDateHeader @Resources.from</label>
                        <input id="QuestionFromDatePicker" type="date" class="form-control" name="" />
                        <label for="QuestionToDatePicker">@Resources.questionTimeDateHeader @Resources.to</label>
                        <input id="QuestionToDatePicker" type="date" class="form-control" />
                    </span>
                    <span class="col-md">
                        <label for="QuestionFromTimePicker">@Resources.questionTimeTimeHeader @Resources.from</label>
                        <input id="QuestionFromTimePicker" type="time" class="form-control" />
                        <label for="QuestionToTimePicker">@Resources.questionTimeTimeHeader @Resources.to</label>
                        <input id="QuestimeToTimePicker" type="time" class="form-control" />
                    </span>
                </span>
            </div>
            <div class="form-group mt-2">
                <label for="question">@Resources.questionHeader</label>
                <input type="text" class="form-control mr-0" id="question" name="Survey.SvyText">
            </div>
            <button type="submit" class="btn btn-primary btn-block">Umfrage absenden</button>
        </div>
        <div class="col-md-5 p-0">
            <h3 class="text-center">@Resources.surveyPreviewHeader</h3>

        </div>
    </div>
}
<script>
    let answers = [];

    $(function () {
        $("#newCategoryDiv").hide();
        $("#answerBox").hide();
        $('[data-toggle="tooltip"]').tooltip();

        $("#openAddCategoryBtn").click(function () {
            $("#newCategoryDiv").show();
            $("#openAddCategoryBtn").prop("disabled", true);
});

        $("#addCategoryBtn").click(function () {
            $("#newCategoryDiv").hide();
            $("#openAddCategoryBtn").prop("disabled", false);
            $("#openAddCategoryBtn").hover();
});

        $("#openAddAnswer").click(function () {
    if ($("#answerBox").is(":hidden")) {
                $("#answerBox").show();
    } else if ($("#answerBox").is(":visible")) {
                $("#answerBox").hide();
    }
});

    });


    function addAnswer() {
        let ul = document.getElementById("answerUL");
        let input = document.getElementById("answerInput").value;

        if (input === "") {
            alert('@Resources.invalidInput');
            return;
        } else if (answers.includes(input)) {
            alert('@Resources.invalidInput');
            return;
        }

        answers.push(input);
        let normal =
        '<li class="list-group-item">' +
            '   <span class="d-flex justify-content-between">' +
            //'       <span>'+ input +'</span>' +
            '<input type="text" class="" name="TextAnswerOptions" value="' + input + '" />' +
            '       <span>' +
            '           <button class="btn btn-info ml-2 pb-0" onclick="editAnswer(this)"><i class="material-icons">&#xe150;</i></button>' +
            '           <button class="btn btn-danger ml-2 pb-0" onclick="deleteAnswer(this)"><i class="material-icons">&#xe5cd;</i></button>' +
            '       </span>' +
            '   </span>' +
            '</li>';
        ul.innerHTML += normal;
    }

    function deleteAnswer(button) {
        let text = button.parentElement.parentElement.children[0].innerHTML;
        for (i = 0; i < answers.length; i++) {
            if (answers[i] === text) {
                answers.splice(i, 1);
                break;
            }
        }
        button.parentElement.parentElement.parentElement.remove();
    }

    function editAnswer(button) {
        let text = button.parentElement.parentElement.children[0].innerHTML;
        let edit =
            '       <input type="text" class="" name="TextAnswerOptions" value="' + text + '" />' +
            '       <span>' +
            '           <button class="btn btn-success ml-2 pb-0" onclick="saveAnswer(this,false,\'' + text +'\')"><i class="material-icons">&#xe5ca;</i></button>' +
            '           <button class="btn btn-secondary ml-2 pb-0" onclick="saveAnswer(this,true,\'' + text +'\')"><i class="material-icons">&#xe5cd;</i></button>' +
            '       </span>';
        button.parentElement.parentElement.innerHTML = edit;
    }

    function saveAnswer(button, canceled,tempText) {
        let text;
        if (canceled) {
            text = tempText;
        } else {
            text = button.parentElement.parentElement.children[0].value;
            if (answers.includes(text)) {
                alert('@Resources.invalidInput');
                return;
            }
            for (i = 0; i < answers.length; i++) {
                if (answers[i] === tempText) {
                    answers[i] = text;
                    break;
                }
            }
        }
        let edited =
            '       <input type="text" class="" name="TextAnswerOptions" value="' + text + '" />' +
            '       <span>' +
            '           <button class="btn btn-info ml-2 pb-0" onclick="editAnswer(this)"><i class="material-icons">&#xe150;</i></button>' +
            '           <button class="btn btn-danger ml-2 pb-0" onclick="deleteAnswer(this)"><i class="material-icons">&#xe5cd;</i></button>' +
            '       </span>';
        tempText = "";
        button.parentElement.parentElement.innerHTML = edited;
    }


</script>


