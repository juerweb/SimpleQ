@using SimpleQ.Webinterface.App_LocalResources
@model SimpleQ.Webinterface.Models.ViewModels.SurveyResultsModel

<div class="row mt-1">

    <div class="col-md-5 pl-5 pr-5">
        <label for="SurveyCategoryCB">@Resources.surveyCategoryHeader</label>
        @Html.DropDownListFor(model => model.SurveyCategories, new SelectList(Model.SurveyCategories, "CatName"), new { @class = "form-control" })
        <div class="row mt-2">
            <div class="col-md-6">
                <div class="form-group mb-0">
                    <label for="timeFrom">@Resources.from</label>
                    <input type="time" class="form-control" id="timeFrom">
                    <input type="date" class="form-control" id="dateFrom">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group mb-0">
                    <label for="timeTwo">@Resources.to</label>
                    <input type="time" class="form-control" id="timeTo">
                    <input type="date" class="form-control" id="dateTo">
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-2">
        <div class="form-group">
            <label for="groups">Teilgenommene Gruppen</label>
            <div class="border border-dark">
                <ul class="list-group groups-ul pl-2" id="groups">
                    @{ List<string> l = new List<string>();
                        l.Add("HR");
                        l.Add("Produktion");
                        l.Add("Einkauf");
                        l.Add("department 4");

                        }
                    @for (var i = 0; i < l.Count; i++)
                    {
                        <li>
                               @l[i]
                        </li>
                    }                   
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-5 pl-5 pr-5">
        <div class="form-group">
            @{ 
                Dictionary<string, string> dropBoxValues = new Dictionary<string, string>();
                dropBoxValues.Add("line", Resources.line);
                dropBoxValues.Add("bar", Resources.bar);
                dropBoxValues.Add("radar", Resources.radar);
                dropBoxValues.Add("doughnut", Resources.doughnut);
            }
            <label for="chart1select">@Resources.diagram@Resources.typeSmall 1</label>
            <select class="form-control" id="chart1select" onchange="changeChart1()">
                @{
                    foreach(KeyValuePair<string,string> elem in dropBoxValues)
                    {
                        <option value="@elem.Key">@elem.Value</option>
                    }
                }

            </select>
        </div>
        <div class="form-group">
            <label for="chart2select">@Resources.diagram@Resources.typeSmall 2</label>
            <select class="form-control" id="chart2select">
                @{
                    foreach (KeyValuePair<string, string> elem in dropBoxValues)
                    {
                        <option value="@elem.Key">@elem.Value</option>
                    }
                }

            </select>
        </div>
    </div>
</div>
<div class="row pr-5 pl-5">
    <div class="col-md-6">
        <canvas id="chart1" width="800" height="500"></canvas>
    </div>
    <div class="col-md-6">
        <canvas id="chart2" width="800" height="500"></canvas>
    </div>
</div>

<script>
    function changeChart1() {
        var ctx = document.getElementById("chart1").getContext('2d');
        var myChart = new Chart(ctx, {
            type: document.getElementById("chart1select").value,
            data: {
                labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
                datasets: [{
                    label: '# of Votes',
                    data: [113, 192, 333, 45, 112, 23],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }
        
 
    

    var ctx = document.getElementById("chart1").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            datasets: [{
                label: '# of Votes',
                data: [113, 192, 333, 45, 112, 23],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var ctx2 = document.getElementById("chart2").getContext('2d');
    var myChart2 = new Chart(ctx2, {
        type: 'doughnut',
        data: {
            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        }
    });
</script>
