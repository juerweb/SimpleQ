@using SimpleQ.Webinterface.App_LocalResources
@*@model SimpleQ.Webinterface.Models.ViewModels.SurveyResultsModel*@

@{
    Random rnd = new Random();
    Dictionary<DateTime, Dictionary<string, int>> votes = new Dictionary<DateTime, Dictionary<string, int>>();
    for (int i = 1; i <= 10; i++)
    {
        string[] temp = { "ORF1", "ORF2", "ORF3", "ATV", "Puls4", "ZDF", "ARD", "ORF Sport +", "SRF", "Arte" };
        Dictionary<string, int> d = new Dictionary<string, int>();
        for (int j = 0; j < 10; j++)
        {
            d.Add(temp[j], rnd.Next(1, 20));
        }
        votes.Add(new DateTime(2018, 1, i), d);
    }
}
<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            <label for="groups">Antwortmöglichkeiten</label>
            <div class="border border-dark">
                <ul class="list-group groups-ul pl-2" id="answers">
                    @{ List<string> answers = new List<string>();
                        answers.Add("ORF1");
                        answers.Add("ORF2");
                        answers.Add("ORF3");
                        answers.Add("ATV");
                        answers.Add("Puls4");
                        answers.Add("ZDF");
                        answers.Add("ATV");
                        answers.Add("ARD");
                        answers.Add("ORF Sport +");
                        answers.Add("SRF");
                        answers.Add("Arte");


                        for (var i = 0; i < answers.Count; i++)
                        {
                            <li>
                                <input type="checkbox" onclick="answerChecked()"><span>@answers[i]</span>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class=" col-md-3">
        <div class="form-group">
            <label for="groups">Gruppen</label>
            <div class="border border-dark">
                <ul class="list-group groups-ul pl-2" id="groups">
                    @{ List<string> l = new List<string>();
                        l.Add("HR");
                        l.Add("Produktion");
                        l.Add("Einkauf");
                        l.Add("department 4");

                    }
                    @for (var i = 0; i < l.Count; i++)
                    {
                        <li>
                            @l[i]
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="col-md-6 pl-3 pr-3">
        <div class="form-group">
            @{
                Dictionary<string, string> dropBoxValues = new Dictionary<string, string>();
                dropBoxValues.Add("line", Resources.bar);
                dropBoxValues.Add("bar", Resources.radar);
                dropBoxValues.Add("listing", Resources.listing);
            }
            <label for="chart1SelectMulti">@Resources.diagram@Resources.typeSmall 1</label>
            <select class="form-control" id="chart1SelectMulti" onchange="changeChartMulti('chart1SelectMulti','chart1Col','chart1')">
                @{
                    foreach (KeyValuePair<string, string> elem in dropBoxValues)
                    {
                        if (elem.Key == "line")
                        {
                            <option value="@elem.Key" selected>@elem.Value</option>
                        }
                        else
                        {
                            <option value="@elem.Key">@elem.Value</option>
                        }
                    }
                }

            </select>
        </div>
        <div class="form-group">
            <label for="chart2SelectMulti">@Resources.diagram@Resources.typeSmall 2</label>
            <select class="form-control" id="chart2SelectMulti" onchange="changeChartMulti('chart2SelectMulti','chart2Col','chart2')">
                @{
                    foreach (KeyValuePair<string, string> elem in dropBoxValues)
                    {
                        if (elem.Key == "bar")
                        {
                            <option value="@elem.Key" selected>@elem.Value</option>
                        }
                        else
                        {
                            <option value="@elem.Key">@elem.Value</option>
                        }
                    }
                }

            </select>
        </div>
    </div>
</div>

<script>
    var checkedAnswers = [];
    function answerChecked() {
        checkedAnswers = [];
        var listItems = document.getElementById('answers').getElementsByTagName('li');
        for (i = 0; i < listItems.length; i++) {
            if (listItems[i].getElementsByTagName('input')[0].checked) {
                checkedAnswers.push(listItems[i].getElementsByTagName('span')[0].textContent);
            }

        }
    }

    let multiDict = []; // create an empty array
    let multiLabels = [];
    @foreach(KeyValuePair<DateTime,Dictionary<string,int>> kvp in votes)
    {
        @:multiLabels.push("@kvp.Key.ToString()");
        foreach(KeyValuePair<string,int> kvp1 in kvp.Value){
            @:dict.push({
                @:key:"@kvp1.Key"
            @:,
                @:value: "@kvp.Value"
            @:});
        }
    }

</script>
