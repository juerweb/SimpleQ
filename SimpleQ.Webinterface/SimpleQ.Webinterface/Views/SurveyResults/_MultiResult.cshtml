@using SimpleQ.Webinterface.Properties;
@model SimpleQ.Webinterface.Models.ViewModels.MultiResultModel


<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label for="groups">Antwortmöglichkeiten</label>
            <div class="border border-dark">
                <ul class="list-group groups-ul pl-2" id="answers">
                    @{
                        foreach (KeyValuePair<string, List<int>> kvp in Model.Votes)
                        {
                            <li>
                                <input type="checkbox" checked="checked" onclick="answerChecked()"><span>@kvp.Key</span>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class=" col-md-4">
        <div class="form-group">
            <label for="groups">Gruppen</label>
            <div class="border border-dark">
                <ul class="list-group groups-ul pl-2" id="groups">
                    @for (var i = 0; i < Model.DepartmentNames.Count; i++)
                    {
                        <li>
                            @Model.DepartmentNames[i]
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="col-md-4 pl-3 pr-3">
        <div class="form-group">
            @{
                Dictionary<string, string> dropBoxValues = new Dictionary<string, string>();
                dropBoxValues.Add("line", Resources.line);
                dropBoxValues.Add("bar", Resources.bar);
                dropBoxValues.Add("listing", Resources.listing);
            }
            <label for="chart1SelectMulti">@Resources.diagram@Resources.typeSmall @Resources.left</label>
            <select class="form-control" id="chart1SelectMulti" onchange="changeChartMulti('chart1SelectMulti','chart1Col','chart1')">
                @{
                    foreach (KeyValuePair<string, string> elem in dropBoxValues)
                    {
                        if (elem.Key == "line")
                        {
                            <option value="@elem.Key" selected>@elem.Value</option>
                        }
                        else
                        {
                            <option value="@elem.Key">@elem.Value</option>
                        }
                    }
                }

            </select>
        </div>
        <div class="form-group">
            <label for="chart2SelectMulti">@Resources.diagram@Resources.typeSmall @Resources.right</label>
            <select class="form-control" id="chart2SelectMulti" onchange="changeChartMulti('chart2SelectMulti','chart2Col','chart2')">
                @{
                    foreach (KeyValuePair<string, string> elem in dropBoxValues)
                    {
                        if (elem.Key == "bar")
                        {
                            <option value="@elem.Key" selected>@elem.Value</option>
                        }
                        else
                        {
                            <option value="@elem.Key">@elem.Value</option>
                        }
                    }
                }

            </select>
        </div>
    </div>
</div>

<script>

    $(function () {
        answerChecked();
    });

    var checkedAnswers = [];
    function answerChecked() {
        checkedAnswers = [];
        var listItems = document.getElementById('answers').getElementsByTagName('li');
        for (i = 0; i < listItems.length; i++) {
            if (listItems[i].getElementsByTagName('input')[0].checked) {
                checkedAnswers.push(listItems[i].getElementsByTagName('span')[0].textContent);
            }

        }
        changeChartMulti('chart1SelectMulti', 'chart1Col', 'chart1');
        changeChartMulti('chart2SelectMulti', 'chart2Col', 'chart2');
    }

    var multiDict = []; // create an empty array
    var multiLabels = [];
    var temp = [];
    @foreach (KeyValuePair<string, List<int>> kvp in Model.Votes)
    {
        @:temp = [];
        foreach(int i in kvp.Value)
        {
            @:temp.push(@i);
        }

         @:multiDict.push({
                @:key:"@kvp.Key"
            @:,
                @:value: temp
            @:});
    }

    @foreach(DateTime d in Model.SurveyDates)
    {
        @:multiLabels.push("@d.ToString("dd.MM.yyyy")");
    }

</script>
