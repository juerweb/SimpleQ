@using SimpleQ.Webinterface.Properties;
@model SimpleQ.Webinterface.Models.ViewModels.MultiResultModel


<div class="row mr-0 ml-0">
    <div class="col-md-6 pl-3">
        <div class="form-group">
            @{
                Dictionary<string, string> dropBoxValues = new Dictionary<string, string>();
                dropBoxValues.Add("line", Resources.line);
                dropBoxValues.Add("bar", Resources.bar);
                dropBoxValues.Add("listing", Resources.listing);
            }
            <label for="chart1SelectMulti">@Resources.diagram@Resources.typeSmall @Resources.left</label>
            <div class="row mr-0 ml-0">
                <div class="col-10 pr-0">
                    <select class="form-control" id="chart1SelectMulti" onchange="changeChartMulti('chart1SelectMulti','chart1Col','chart1')">
                        @{
                            foreach (KeyValuePair<string, string> elem in dropBoxValues)
                            {
                                if (elem.Key == "line")
                                {
                                    <option value="@elem.Key" selected>@elem.Value</option>
                                }
                                else
                                {
                                    <option value="@elem.Key">@elem.Value</option>
                                }
                            }
                        }

                    </select>
                </div>
                <div class="col-2 pl-0">
                    <button class="btn btn-light btn-block border pb-0" onclick="zoomChart('chart1SelectMulti')"><i class="material-icons">&#xe56b;</i></button>
                </div>
            </div>
            
        </div>
    </div>
    <div class="col-md-6 pr-3">
        <div class="form-group">
            <label for="chart2SelectMulti">@Resources.diagram@Resources.typeSmall @Resources.right</label>
            <div class="row mr-0 ml-0">
                <div class="col-10 pr-0">
                    <select class="form-control" id="chart2SelectMulti" onchange="changeChartMulti('chart2SelectMulti','chart2Col','chart2')">
                        @{
                            foreach (KeyValuePair<string, string> elem in dropBoxValues)
                            {
                                if (elem.Key == "bar")
                                {
                                    <option value="@elem.Key" selected>@elem.Value</option>
                                }
                                else
                                {
                                    <option value="@elem.Key">@elem.Value</option>
                                }
                            }
                        }

                    </select>
                </div>
                <div class="col-2 pl-0">
                    <button class="btn btn-light btn-block border pb-0" onclick="zoomChart('chart2SelectMulti')"><i class="material-icons">&#xe56b;</i></button>
                </div>
            </div>
        </div>
    </div>
       
</div>

<script>

    $(function () {
        changeChartMulti('chart1SelectMulti', 'chart1Col', 'chart1');
        changeChartMulti('chart2SelectMulti', 'chart2Col', 'chart2');
        //answerChecked();
    });

    var checkedAnswers = [];
    function answerChecked() {
        checkedAnswers = [];
        var listItems = document.getElementById('answers').getElementsByTagName('li');
        for (i = 0; i < listItems.length; i++) {
            if (listItems[i].getElementsByTagName('input')[0].checked) {
                checkedAnswers.push(listItems[i].getElementsByTagName('span')[0].textContent);
            }

        }
        changeChartMulti('chart1SelectMulti', 'chart1Col', 'chart1');
        changeChartMulti('chart2SelectMulti', 'chart2Col', 'chart2');
    }

    var multiDict = []; // create an empty array
    var multiLabels = [];
    var multiSvyText = "@Model.SvyText";
    var temp = [];
    
    @foreach (KeyValuePair<string, List<int>> kvp in Model.Votes)
    {       
        @:temp = [];
        foreach(int i in kvp.Value)
        {
            @:temp.push(@i);
        }

         @:multiDict.push({
                @:key:"@kvp.Key"
            @:,
                @:value: temp
            @:});
    }

    @foreach(DateTime d in Model.SurveyDates)
    {
        @:multiLabels.push("@d.ToString("dd.MM.yyyy")");
    }

</script>
