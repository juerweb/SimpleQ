@using SimpleQ.Webinterface.Properties;
@model List<SimpleQ.Webinterface.Models.ViewModels.SingleResultModel>
@*@model SimpleQ.Webinterface.Models.ViewModels.SingleResultModel*@
@*@{

        Dictionary<string, int> votes = new Dictionary<string, int>(); //temporary in place of ajax all
        votes.Add("ORF1", 12);
        votes.Add("ORF2", 8);
        votes.Add("ATV", 8);
        votes.Add("Puls 4", 7);
        votes.Add("Pro 7", 9);
        votes.Add("RTL", 3);
        votes.Add("RTL II", 2);
        votes.Add("ORF3", 4);
        votes.Add("DMAX", 10);
        votes.Add("Super RTL", 0);
        votes.Add("Nickelodeon", 6);
        votes.Add("ZDF", 15);
        votes.Add("ARD", 2);
    }*@
<div class="row mr-0 ml-0">
    <div class="col-1">
        <button type="button" id="previousSurveyButton" class="btn btn-light btn-block border" onclick="showPreviousSurvey()"> < </button>
    </div>

    <div class="col-10">
        <h3 id="singleResultDate" class="text-center"></h3>
    </div>

    <div class="col-1">
        <button type="button" id="nextSurveyButton" class="btn btn-light btn-block border" onclick="showNextSurvey()"> > </button>
    </div>
</div>
<div class="row mr-0 ml-0">
    @*<div class="col-md-4">
            <div class="form-group">
                <label for="groups">Teilgenommene Gruppen</label>
                <div class="border border-dark">
                    <ul class="list-group groups-ul pl-2" id="groups">
                        @for (var i = 0; i < Model.DepartmentNames.Count; i++)
                        {
                            <li>
                                @Model.DepartmentNames[i]
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>*@   
    <div class="col-md-6">
        <div class="form-group">
            @{
                Dictionary<string, string> dropBoxValues = new Dictionary<string, string>();
                dropBoxValues.Add("bar", Resources.bar);
                dropBoxValues.Add("radar", Resources.radar);
                dropBoxValues.Add("doughnut", Resources.doughnut);
                dropBoxValues.Add("listing", Resources.listing);
                dropBoxValues.Add("polarArea", Resources.polarArea);
            }
            <label for="chart1select">@Resources.diagram@Resources.typeSmall @Resources.left</label>

            <div class="row mr-0 ml-0">
                <div class="col-10 pr-0">
                    <select class="form-control" id="chart1SelectSingle" onchange="changeChartSingle('chart1SelectSingle', 'chart1Col', 'chart1'); updateSelect1(this);">
                        @{
                            foreach (KeyValuePair<string, string> elem in dropBoxValues)
                            {
                                if (elem.Key == "bar")
                                {
                                    <option value="@elem.Key" selected>@elem.Value</option>
                                }
                                else
                                {
                                    <option value="@elem.Key">@elem.Value</option>
                                }
                            }
                        }

                    </select>
                </div>
                <div class="col-2 pl-0">
                    <button class="btn btn-light btn-block border pb-0" onclick="zoomChart('chart1SelectSingle')"><i class="material-icons">&#xe56b;</i></button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="chart2SelectSingle">@Resources.diagram@Resources.typeSmall @Resources.right</label>
            <div class="row mr-0 ml-0">
                <div class="col-10 pr-0">
                    <select class="form-control" id="chart2SelectSingle" onchange="changeChartSingle('chart2SelectSingle','chart2Col','chart2')">
                        @{
                            foreach (KeyValuePair<string, string> elem in dropBoxValues)
                            {
                                if (elem.Key == "doughnut")
                                {
                                    <option value="@elem.Key" selected>@elem.Value</option>
                                }
                                else
                                {
                                    <option value="@elem.Key">@elem.Value</option>
                                }
                            }
                        }

                    </select>
                </div>
                <div class="col-2 pl-0">
                    <button class="btn btn-light btn-block border pb-0" onclick="zoomChart('chart2SelectSingle')"><i class="material-icons">&#xe56b;</i></button>
                </div>
            </div>
        </div>
    </div>    
</div>

<script>

    var dicts = [];
    //var dict = []; // create an empty array
    var freeTextAnswers = [];
    @{
        for(int i = 0; i < Model.Count; i++)
        {
            @:dicts.push({dict: [], date: "@Model[i].StartDate.ToShortDateString() - @Model[i].EndDate.ToShortDateString()"});
            if(Model[i].Votes != null)
            {
                foreach (KeyValuePair<string, int> kvp in Model[i].Votes)
                {

                @:dicts[@i].dict.push({
                    @:key: "@kvp.Key"
                @:,
                    @:value: "@kvp.Value"
                @:});
                }
                @:$("#chart1SelectSingle").change();
                @:$("#chart2SelectSingle").change();
            }
            else
            {
                @:freeText = false;
                @:freeTextAnswers = [];
                foreach (string answer in Model[i].FreeTextVotes)
                {
                    @:dicts[@i].dict.push("@answer");
                    @:showFreeTextAnsers();
                }
            }
            }
    }



    function updateSelect1(elem) {
        //alert(elem.value);
        //$("#chart1Select option[selected='true']").hide();
    }

</script>
